@model Chessboard


@{
    int size = Model.size;
    if (Model.size > 8)
        size = 8;
    int square = 25 * (10 - size);
    string squareSize = square + "px";
    int font = 15 * (10 - size);
    string fontSize = font + "px";
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">N Queens Problem</h1>
    @*<p>On the N-queens problem, implement the hill-climbing, simulated annealing, local beam search and genetic algorithms. Research the algorithms using the web. The application must have a graphical user interface and you must enable the user to change algorithm parameters. For simulated annealing, the user should be able to change the starting temperature and the cooling factor. For local beam search, the user should be able to change the number of states. For the genetic algorithm, the user should be able to change the size of a single generation, the percent of elitism, the crossover probability, the mutation probability and the number of generations.</p>*@
</div>

<div class="site-index">
    <div class="body-content">
        <div class="row">
            <div class="form-group col-md-2">
                <br />
                <br />
                <br />
                <button type="button" class="btn btn-outline-primary btn-block">hill-climbing</button>
                <button type="button" class="btn btn-outline-secondary btn-block">simulated annealing</button>
                <button type="button" class="btn btn-outline-success btn-block">local beam search</button>
                <button type="button" class="btn btn-outline-danger btn-block">genetic algorithms</button>

                @using (Html.BeginForm("NewSize", "NQueensProblem", FormMethod.Post))
                {
                    <label for="size">State</label>
                    <select id="size" name="size" class="form-control">
                        
                        <option selected>4</option>
                        <option vaulue="2">5</option>
                        <option vaulue="3">6</option>
                        <option vaulue="1">7</option>
                        <option vaulue="2">8</option>
                        <option vaulue="3">9</option>
                        <option vaulue="1">10</option>
                        <option vaulue="2">11</option>
                        <option vaulue="3">12</option>
                    </select>

                    <button type="submit" class="btn btn-primary" style="margin-top: 15px; margin-bottom: 15px">
                        Change Size
                    </button>
                }
                
            </div>


            <div class="col-lg-9">
                <div class="chessboard">
                    @{
                        for (int i = 0; i < Model.size + 1; i++)
                        {
                            if (i == 0)
                            {
                                <div class="square-number" style="color: white">0</div>
                            }
                            else
                            {
                                char sign = Convert.ToChar(i + 'A' - 1);
                                <div class="square-number">

                                    <div class="number">
                                        @sign
                                    </div>
                                </div>
                            }
                        }
                        <br />
                        for (int i = 0; i < Model.size; i++)
                        {
                            <div class="square-number" style="vertical-align:top;">@(i+1)</div>
                            for (int j = 0; j < Model.size; j++)
                            {
                                if ((i + j) % 2 == 1)
                                {
                                    <div class="square-0"></div>
                                }
                                else
                                {
                                    <div class="square-1"></div>
                                }
                            }
                            <br />
                        }
                    }


                </div>
            </div>
        </div>
    </div>
</div>

<style>

    .chessboard div {
        display: inline-block;
        width: @squareSize;
        height:  @squareSize;
        border-radius: 10px;

    }
    .square-0 {
        background-color: gray;
        border: 2px solid #000000;
        text-align:right;
    }
    .square-1 {
        background-color: #282828;
        border: 2px solid #000000;
    }
    .square-number {
        background-color: white;
        font-size: @fontSize;
     
    }
    .number {
        text-align:center;
       margin:auto;
    }

</style>
