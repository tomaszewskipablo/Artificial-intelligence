@model Chessboard

@{

    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">N Queens Problem</h1>
    <p>On the N-queens problem, implement the hill-climbing, simulated annealing, local beam search and genetic algorithms. Research the algorithms using the web. The application must have a graphical user interface and you must enable the user to change algorithm parameters. For simulated annealing, the user should be able to change the starting temperature and the cooling factor. For local beam search, the user should be able to change the number of states. For the genetic algorithm, the user should be able to change the size of a single generation, the percent of elitism, the crossover probability, the mutation probability and the number of generations.</p>
</div>

<div class="site-index">
    <div class="body-content">
        <div class="chessboard">
        @{
            for (int i = 0; i < Model.size; i++)
            {
                for (int j = 0; j < Model.size; j++)
                {
                    if ((i + j) % 2 == 1)
                    {
                        <div class="square-0"></div>
                    }
                    else
                    {
                          <div class="square-1"></div>
                    }
                }
                <br />
            }
        }
            </div>
    </div>
</div>

<style>

    .chessboard div {
        display: inline-block;
        width: 120px;
        height: 120px;
        border-radius: 25px;
        border: 2px solid #000000;
    }
    .square-0 {     
        background-color: gray;
        
    }
    .square-1 {
        background-color: #282828;
    }

</style>